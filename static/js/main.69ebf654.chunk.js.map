{"version":3,"sources":["components/Nav.js","components/SearchArea.js","components/Movie.js","components/MovieList.js","components/Pagination.js","components/MovieInfo.js","components/App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","SearchArea","props","action","onSubmit","handleSubmit","placeholder","type","onChange","handleChange","Movie","image","src","alt","style","width","height","onClick","viewMovieInfo","movieId","MovieList","movies","map","movie","i","key","id","poster_path","Pagination","pageLinks","active","currentPage","push","nextPage","pages","MovieInfo","closeMovieInfo","cursor","paddingTop","marginLeft","currentMovie","title","release_date","substring","split","concat","join","overview","App","e","preventDefault","fetch","state","searchTerm","then","data","json","console","log","setState","results","totalResults","total_results","target","value","pageNumber","filteredMovie","filter","newCurrentMovie","length","numberPages","Math","floor","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.69ebf654.chunk.js","sourcesContent":["import React from 'react';\r\nconst Nav = () => {\r\n    return (\r\n        <nav>\r\n        <div className=\"nav-wrapper container\">\r\n             <a href=\"#\" className=\"brand-logo\">IMDB</a> \r\n        </div>\r\n        \r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst SearchArea=(props)=>\r\n{\r\nreturn (\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <section className=\"col s4 offset-s4\">\r\n                <form action=\"\" onSubmit={props.handleSubmit}>\r\n                    <div className=\"input-field\">\r\n                        <input placeholder=\"search movie\" type=\"text\"  onChange={props.handleChange}/>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n            </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default SearchArea;","import React from 'react';\r\n\r\nconst Movie = (props) =>{\r\n    return (\r\n        <div className=\"col s12 m6 l3\">\r\n            <div className=\"card\">\r\n                <div className=\"card-image waves-effect waves-block waves-light\">\r\n                   {\r\n                       props.image==null ? <img src={`https://www.homewallmurals.co.uk/ekmps/shops/allwallpapers/images/captain-marvel-epic-61x91-5cm-movie-poster-31596-1-p.jpg`} alt=\"card image\" style={{width:\"100%\",height:360 }} /> : <img src={`http://image.tmdb.org/t/p/w185${props.image}`} alt=\"card image\" style={{width:\"100%\",height:360 }} / >\r\n                   }\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <p><a href=\"#\" onClick={()=> props.viewMovieInfo(props.movieId)}>View Details</a></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n} \r\nexport default Movie;","import React from 'react';\r\nimport Movie from './Movie';\r\nconst MovieList = (props) =>{\r\n    return (\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col s12\">\r\n                 {\r\n                     props.movies.map((movie,i)=> {\r\n                               return (\r\n                                   <Movie key={i} viewMovieInfo={props.viewMovieInfo}  movieId={movie.id} image={movie.poster_path}/>\r\n                               )\r\n                     })\r\n                 }\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default MovieList;","import React from 'react';\r\n\r\nconst Pagination =(props) =>{\r\n    const pageLinks= []\r\n    for(let i=1;i<=props.pages+1;i++){\r\n     let active =props.currentPage==i ? 'active':'';\r\npageLinks.push(<li className={`waves-effect ${active} `} key={i} onClick={()=>props.nextPage(i)}><a href=\"#\">{i}</a></li>)\r\n}\r\n\r\n  return (\r\n      <div className=\"conatiner\">\r\n        <div className=\"row\">\r\n            <ul className=\"pagination\">\r\n                {props.currentPage>1?<li className={`waves-effect `}  onClick={()=>props.nextPage(props.currentPage-1)}><a href=\"#\">Prev</a></li> :''}\r\n                {pageLinks}\r\n                {props.currentPage<props.pages+1?<li className={`waves-effect  `}  onClick={()=>props.nextPage(props.currentPage+1)}><a href=\"#\">Next</a></li> :''}\r\n\r\n\r\n            </ul>\r\n        </div>\r\n      </div>\r\n  )\r\n\r\n\r\n\r\n}\r\n\r\nexport default Pagination;\r\n\r\n","import React from 'react';\r\nconst MovieInfo =(props) =>{\r\n  return (\r\n     <div className=\"container\">\r\n         <div className=\"row\" onClick={props.closeMovieInfo}  style ={{cursor:\"pointer\",paddingTop:50}}>\r\n             <i className=\"fas fa-arrow-left\"></i>\r\n             <span style={{marginLeft:10} }>Go Back</span>\r\n         </div>\r\n           \r\n           <div className=\"row\">\r\n                 \r\n                 <div className=\"col s12 m4\">\r\n                 {props.currentMovie.poster_path==null ?<img src={\"https://www.homewallmurals.co.uk/ekmps/shops/allwallpapers/images/captain-marvel-epic-61x91-5cm-movie-poster-31596-1-p.jpg\"}\r\n               alt=\"Card image\" style={{width:\"100%\" ,height:360 }}/> :<img src={`http://image.tmdb.org/t/p/w185${props.currentMovie.poster_path}`}\r\n               alt=\"Card image\" style={{width:\"100%\" ,height:360 }}/>}\r\n                 </div>\r\n                  \r\n                 <div className=\"col s12 m8\">\r\n               <div className=\"info-container\">\r\n                     <p>{props.currentMovie.title}</p>\r\n                     <p>{props.currentMovie.release_date.substring(5).split(\"-\").concat(props.currentMovie.release_date.substring(0,4)).join(\"/\")}</p>\r\n                     <p>{props.currentMovie.overview}</p>\r\n\r\n               </div>\r\n               </div>   \r\n\r\n              \r\n           </div>\r\n             \r\n           \r\n\r\n     </div>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default MovieInfo;","import React,{Component} from 'react';\nimport Nav from './Nav';\nimport SearchArea from './SearchArea';\nimport MovieList from './MovieList'\nimport Pagination from './Pagination'\nimport MovieInfo from './MovieInfo'\n\n\nclass App extends Component{\nconstructor(){\n  super()\n  this.state={\n    movies:[],\n    searchTerm:'',\n    totalResults:0,\n    currentPage:1,\n    currentMovie:null\n  }\n  //this.apiKey=process.env.REACT_APP_API\n}\n\nhandleSubmit = (e) => {\n  e.preventDefault();\n\n   fetch(`https://api.themoviedb.org/3/search/movie?api_key=2dd72dc498f618f8974ca149d5c8241a&query=${this.state.searchTerm}`)\n  \n    .then(data => data.json())\n    .then(data => {\n      console.log(data);\n      this.setState({movies: [...data.results] ,totalResults:data.total_results})\n    })\n  \n  \n  }\n  handleChange = (e) => {\n      this.setState({ searchTerm: e.target.value })\n  }\n  nextPage =(pageNumber) =>{\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=2dd72dc498f618f8974ca149d5c8241a&query=${this.state.searchTerm}&page=${pageNumber}`)\n  \n    .then(data => data.json())\n    .then(data => {\n      console.log(data);\n      this.setState({movies: [...data.results],currentPage:pageNumber })\n    })    \n\n  }\n  \n  viewMovieInfo=(id) =>{\n    const filteredMovie = this.state.movies.filter(movies=>movies.id==id)\n\n    const newCurrentMovie = filteredMovie.length > 0 ? filteredMovie[0] : null\n    this.setState({currentMovie:newCurrentMovie})\n\n\n  }\n\n  closeMovieInfo =()=>{\n    this.setState({currentMovie: null })\n  }\n\n\n\nrender() {\n\n  const numberPages =Math.floor(this.state.totalResults /20);\n  return (\n    \n    <div className=\"App\">\n   \n     <Nav />\n     {this.state.currentMovie==null ?     <div> <SearchArea  handleSubmit={this.handleSubmit} handleChange={this.handleChange}/><MovieList viewMovieInfo={this.viewMovieInfo} movies={this.state.movies} /></div>:<MovieInfo currentMovie={this.state.currentMovie}   closeMovieInfo={this.closeMovieInfo} />}\n     {this.state.totalResults>20 && this.state.currentMovie==null ? <Pagination pages={numberPages} nextPage={this.nextPage} currentPage={this.state.currentPage}/> :''}\n    </div>\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}